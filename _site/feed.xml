<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dafong Blog</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 27 Sep 2017 11:53:45 +0000</pubDate>
    <lastBuildDate>Wed, 27 Sep 2017 11:53:45 +0000</lastBuildDate>
    <generator>Jekyll v3.5.1</generator>
    
      <item>
        <title>Nginx小记</title>
        <description>&lt;p&gt;研究&lt;a href=&quot;https://openresty.org&quot;&gt;openresty&lt;/a&gt;的时候准备自己写一个简单的web framework,以前对nginx的location匹配规则,以及如何在脚本这一端实现一套restful风格的url路由都没有细研究过，这次也算是做个记录。&lt;/p&gt;

&lt;h3 id=&quot;nginx-location-匹配规则&quot;&gt;nginx location 匹配规则&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;sytax&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;define&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;=&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;精确匹配&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;prefix string&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;nginx最优先检查,最长匹配的被作为候选&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;^~&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;前缀匹配，如果存在最长的匹配则不检查后面的正则匹配&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;~&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;大小写敏感的正则匹配&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;~*&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;大小写不敏感的正则匹配&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;所以总结起来的优先级就是&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= &amp;gt; ^~ &amp;gt; ~ = ~* &amp;gt; prefix string
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;同为正则匹配的~和~*，匹配的优先级按照在配置文档中出现的顺序决定。&lt;/p&gt;

&lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/documents/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;^~&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/images/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.(gif|jpg|jpeg)&lt;/span&gt;$ &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;”/” 会被精确匹配到A。&lt;/li&gt;
  &lt;li&gt;“/index.html”不符合所有正则匹配的规则，所以采用规则C。&lt;/li&gt;
  &lt;li&gt;“/documents/document.html”,符合prefix string 里的规则B和规则C，但是根据最长匹配原则会匹配到C。&lt;/li&gt;
  &lt;li&gt;“/images/1.gif” 符合B和D，因为前缀匹配的优先级更高，所以匹配到D。&lt;/li&gt;
  &lt;li&gt;“/documents/1.jpg”符合B,C,E,因为E的优先级更高，所以会匹配到E。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;###&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2017/09/27/nginx-summary/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/09/27/nginx-summary/</guid>
        
        <category>openresty</category>
        
        
      </item>
    
      <item>
        <title>博客重开</title>
        <description>&lt;p&gt;折腾了几次空间以后终于把之前的Blog给折腾没了，之所以折腾来折腾去最主要的原因还是为了跟“墙“作斗争，买来的VPN比起租VPS来虽说是惠而不费，但是身为一个搞技术的，多多少少还是用自己一手搭建起来的舒服，况且有个VPS还能搞一些其他的事情。&lt;/p&gt;

&lt;p&gt;最早我都是用&lt;a href=&quot;http://www.linode.com&quot;&gt;linode&lt;/a&gt;的VPS，用了也有快两年有余吧，东京节点，一直都是相安无事的，无奈后来是树大招风，最终是给ban掉了。老佟给我推荐过美国的&lt;a href=&quot;https://bandwagonhost.com/&quot;&gt;搬瓦工&lt;/a&gt;，我在家试了试速度一般，后来选了还是日本的一家服务商Conoha，感觉还比较稳定，有英文界面而且可以支付宝，下面献上我的&lt;a href=&quot;https://www.conoha.jp/referral/?token=tnxbDQs63VG1lAOJmeJWWGnLQuHZWktF.YObnv71v3LxKj8xGXw-U4E&quot;&gt;referral link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原来的Blog主要是记录一些技术方面的问(cai)题(keng)和解(tian)决(keng)过程做个备忘，后来项目一忙以后经常来不及更新，最近发现有的问题明明碰到过也解决过，但是却忘了是怎么搞得来了，所以还是需要这么个地儿，技术人员在github.io上写博客似乎是很流行的事了，所以我也从网上搜了几篇文章然后把这个Blog给弄出来了。&lt;/p&gt;

&lt;p&gt;以上就算是开篇吧。&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2017/07/12/hello-blog/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/12/hello-blog/</guid>
        
        <category>随便写写</category>
        
        
      </item>
    
  </channel>
</rss>
